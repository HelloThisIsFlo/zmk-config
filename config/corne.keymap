/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        /* NOTE: In QMK, Manna-Harbour is working on a similar feature:
        https://github.com/manna-harbour/qmk_firmware/blob/bilateral-combinations/docs/tap_hold.md#bilateral-combinations
        */
        hrm_l: homerowmods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            #binding-cells = <2>;
            tapping-term-ms = <500>; // Large Term since we're using 'hold-preferred'
            quick-tap-ms = <0>;
            flavor = "hold-preferred";// Experiment w/ hold-preferred (vs tap-preferred). Shouldn't be a problem since we prevent hold when using keys on the same hand
            bindings =
                <&kp>,
                <&kp>;

            // IMPORTANT: If defining a Chocofi Shield, these positions will change. Don't forget to update them!

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
        hrm_r: homerowmods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            #binding-cells = <2>;
            tapping-term-ms = <500>; // Large Term since we're using 'hold-preferred'
            quick-tap-ms = <0>;
            flavor = "hold-preferred";// Experiment w/ hold-preferred (vs tap-preferred). Shouldn't be a problem since we prevent hold when using keys on the same hand
            bindings =
                <&kp>,
                <&kp>;

            // IMPORTANT: If defining a Chocofi Shield, these positions will change. Don't forget to update them!

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
        comma_capsword: comma_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "COMMA_CAPSWORD";
            #binding-cells = <0>;
            bindings =
                <&kp COMMA>,
                <&caps_word>;
        };
        dot_UNDERSCORE: dot_UNDERSCORE {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_UNDERSCORE";
            bindings =
                <&kp KP_DOT>,
                <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        Special_Key: Special_Key {
            compatible = "zmk,behavior-tap-dance";
            label = "SPECIAL_KEY";
            #binding-cells = <0>;
            bindings =
                <&mo 8>,
                <&none>,
                <&to 2>,
                <&to 5>;
        };
        k_toni: k_toni {
            compatible = "zmk,behavior-tap-dance";
            label = "K_TONI";
            #binding-cells = <0>;
            bindings =
                <&kp K>,
                <&none>,
                <&toni>;
        };
    };

    macros {
        toni: toni {
            compatible = "zmk,behavior-macro";
            label = "TONI";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp O &kp N &kp I>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        APT {
            bindings = <
&trans  &kp W           &kp G          &kp D          &kp F           &kp B           &kp Q       &kp L           &kp U          &kp O          &kp Y           &trans
&none   &hrm_l LCTRL R  &hrm_l LALT S  &hrm_l LCMD T  &hrm_l LSHFT H  &kp K           &kp J       &hrm_r LSHFT N  &hrm_r LCMD E  &hrm_r LALT A  &hrm_r LCTRL I  &none
&trans  &kp X           &kp C          &kp M          &kp P           &kp V           &kp Z       &kp COMMA       &kp DOT        &kp SQT        &kp SEMI        &none
                                       &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "APT";
        };

        Sturdy {
            bindings = <
&none  &kp V           &kp M          &kp L          &kp C           &kp P           &kp X       &kp F           &kp O          &kp U          &kp J           &none
&none  &hrm_l LCTRL S  &hrm_l LALT T  &hrm_l LCMD R  &hrm_l LSHFT D  &kp Y           &kp DOT     &hrm_r LSHFT N  &hrm_r LCMD A  &hrm_r LALT E  &hrm_r LCTRL I  &none
&none  &kp Z           &kp K          &kp Q          &kp G           &kp W           &kp B       &kp H           &kp SQT        &kp SEMI       &kp COMMA       &none
                                      &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "Sturdy";
        };

        Gallium {
            bindings = <
&none  &kp B           &kp L          &kp D          &kp C           &kp V           &kp K       &kp Y           &kp O          &kp U          &comma_capsword  &none
&none  &hrm_l LCTRL N  &hrm_l LALT R  &hrm_l LCMD T  &hrm_l LSHFT S  &kp G           &kp P       &hrm_r LSHFT H  &hrm_r LCMD A  &hrm_r LALT E  &hrm_r LCTRL I   &none
&none  &kp X           &kp Q          &kp M          &kp W           &kp Z           &kp J       &kp F           &kp APOS       &kp SEMI       &dot_UNDERSCORE  &none
                                      &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "Gallium";
        };

        Dhorf {
            bindings = <
&none  &kp V           &kp L          &kp H          &kp K           &kp Q           &kp J       &kp F           &kp O          &kp U          &kp COMMA       &none
&none  &hrm_l LCTRL S  &hrm_l LALT R  &hrm_l LCMD N  &hrm_l LSHFT T  &kp W           &kp Y       &hrm_r LSHFT C  &hrm_r LCMD A  &hrm_r LALT E  &hrm_r LCTRL I  &none
&none  &kp Z           &kp X          &kp M          &kp D           &kp B           &kp W       &kp G           &kp APOS       &kp SEMI       &kp DOT         &none
                                      &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "Dhorf";
        };

        Whorf {
            bindings = <
&none  &kp F           &kp L          &kp H          &kp D           &kp M           &kp V       &kp W           &kp O          &kp U          &kp COMMA       &none
&none  &hrm_l LCTRL S  &hrm_l LALT R  &hrm_l LCMD N  &hrm_l LSHFT T  &kp K           &kp G       &hrm_r LSHFT Y  &hrm_r LCMD A  &hrm_r LALT E  &hrm_r LCTRL I  &none
&none  &kp X           &kp J          &kp B          &kp Z           &kp Q           &kp P       &kp C           &kp APOS       &kp SEMI       &kp DOT         &none
                                      &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "Whorf";
        };

        Recurva {
            bindings = <
&trans  &kp F           &kp R          &kp D          &kp P           &kp V           &kp Q       &kp J           &kp U          &kp O          &kp Y           &trans
&trans  &hrm_l LCTRL S  &hrm_l LALT N  &hrm_l LCMD T  &hrm_l LSHFT C  &kp B           &kp DOT     &hrm_r LSHFT H  &hrm_r LCMD E  &hrm_r LALT A  &hrm_r LCTRL I  &trans
&trans  &kp Z           &kp X          &kp K          &kp G           &kp W           &kp M       &kp L           &kp SEMI       &kp SQT        &kp COMMA       &trans
                                       &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "Recurva";
        };

        QWERTY {
            bindings = <
&none  &kp Q           &kp W          &kp E          &kp R           &kp T           &kp Y       &kp U           &kp I          &kp O          &kp P              &none
&none  &hrm_l LCTRL A  &hrm_l LALT S  &hrm_l LCMD D  &hrm_l LSHFT F  &kp G           &kp H       &hrm_r LSHFT J  &hrm_r LCMD K  &hrm_r LALT L  &hrm_r LCTRL SEMI  &none
&none  &kp Z           &kp X          &kp C          &kp V           &kp B           &kp N       &kp M           &kp COMMA      &kp DOT        &kp SLASH          &none
                                      &kp TAB        &kp RET         &lt 10 SPACE    &lt 7 BSPC  &kp ESC         &mo 8
            >;

            label = "QWERTY";
        };

        Numbers {
            bindings = <
&trans  &trans              &kp KP_N9          &kp KP_N8          &kp KP_N9           &trans       &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&trans  &hrm_l LCTRL LCTRL  &hrm_l LALT KP_N4  &hrm_l LCMD KP_N5  &hrm_l LSHFT KP_N6  &trans       &kp LEFT  &kp DOWN           &kp UP           &kp RIGHT             &trans                &trans
&trans  &trans              &kp KP_N1          &kp KP_N2          &kp KP_N3           &trans       &trans    &trans             &trans           &trans                &trans                &trans
                                               &trans             &trans              &kp KP_N0    &trans    &trans             &trans
            >;

            label = "Numbers";
        };

        Settings {
            bindings = <
&none  &trans             &trans            &trans             &trans        &trans          &to 2   &to 1      &to 5    &to 3   &to 4   &trans
&none  &bt BT_SEL 0       &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4    &to 6   &to 1      &to 0    &trans  &trans  &none
&none  &ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &trans        &trans          &trans  &trans     &trans   &trans  &trans  &trans
                                            &trans             &none         &kp LGUI        &trans  &kp SPACE  &kp RET
            >;

            label = "Settings";
        };

        Symbols {
            bindings = <
&none  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &none
&none  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &none
                         &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;

            label = "Symbols";
        };

        tmp_epistory {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans     &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;

            label = "Episotory (TMP)";
        };
    };
};
